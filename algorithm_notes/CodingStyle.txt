# 一、什么是优秀的coding style？

* 符合标准的高质量代码。编码标准定义了所有开发人员的编程规则，遵循编码标准后，项目的所有代码整洁标准，甚至宛若同一人在同一时间段编写的。

# 二、为什么coding style很重要?
* 一致、可读性高的代码更容易理解、维护、扩展、审查。除此之外，优秀的coding style可重复使用，在代码安全、性能、效率、求职等方面都会使你收益颇丰。
* 安全方面：逻辑上的错误、缺陷、不一致性通常是产生漏洞以至于被攻击的主要原因。
* 性能方面：较差的编码会影响网站的整体性能，导致用户交互、服务器响应、代码可重用性、信息流等多方问题。
* 效率方面：对于团队，拥有良好的coding style，遵循相同的规则编写代码，有助于团队其他成员理解、维护代码。对于个人，即使这是一个永远不会与别人共享的项目，遵循标准也可以让你在搁置项目后，不必花费数小时甚至数天的时间重新缕清思路，良好的coding style可以帮助我们快速理解代码。
* 求职方面：拥有优秀的coding style，了解编码标准方面的知识也有利于求职。对于公司来说，聘用一个写的代码不易理解的程序员，对组内其他人员来说几乎是场灾难。不但不能快速接手项目，同组成员在维护、扩展、审查上难度也直线上升。细节定成败，干净的代码除了展现过硬的专业技术外，也方便理解节约沟通成本，无形之中提升了面试官的印象分，对面试最终结果产生不可忽略的影响。

# 三、在编写代码时要记住的事情
* 使用有意义的名称
** 变量、函数、类、参数、模块、包、目录……养成在代码中使用有意义名称的习惯。名称应该满足三个目的：它是做什么的，它为什么存在，它是如何被使用的。我们在指定的名称中应该揭示代码的意图，指定变量、函数或方法的用途。取一个有意义的名称可能需要花费一些时间，但是它使代码更清晰，更容易阅读。最后，尽量将名字限制在三四个词以内。

# 单一职责原则（SRP）
在编写代码时，我们经常使用能够传达意图的函数。在我们写函数时，为了使代码简洁明了易于理解，应该记住两点：
1. 函数应该很小。
2. 函数只做一件事，做好一件事。
以上两点也体现了单一职责原则。我们应该尽量避免嵌套结构，及两个以上的缩进级别。遵循SRP可以使代码更具可读性，方便其他开发人员轻松理解、实现其他特性。
确保函数的参数不超过三个。三个以上的参数会使代码变得混乱，出现问题很难调试。如果函数里有try/catch/finally语句，可以将其单拎出来，创建一个单独的函数，其中只包含try-catch-finally语句。最后，注意名称，为函数拟定一个描述性的名称，清楚说明它的功能。

# 增加代码可读性
有些小伙伴在写代码时会犯这样的错误，将所有的东西都写在一行，却没有在代码中留出适当的空格、缩进、换行。这使得代码非常混乱，很难维护。其他开发人员阅读并理解这些混乱的代码，需要浪费大量的时间。所以，我们一定要注意代码格式，确保代码具备适当的缩进、空格和换行符。

# 让项目井井有条
这是软件开发中一个非常常见的问题，我们在项目中添加、删除了大量的文件及目录，这给其他需要理解项目并进行相关任务的开发人员造成了不小的麻烦。也许大家不可能在第一天就设计出一个完美的文件夹，但当我们的项目不断扩展不断变大时，则需要注意文件夹和组织目录了。一个结构良好的文件夹可以使项目变得清晰，更容易理解。
